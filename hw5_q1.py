import json
import pathlib
from typing import Union, Tuple
import numpy as np
import matplotlib.pyplot as plt


class QuestionnaireAnalysis:
    """
    Reads and analyzes data generated by the questionnaire experiment.
    Should be able to accept strings and pathlib.Path objects.
    """

    def __init__(self, data_fname: Union[pathlib.Path, str]):
        """
        Initializes the QuestionnaireAnalysis object.

        Parameters
        ----------
        data_fname : Union[pathlib.Path, str]
            Path to the JSON file containing the data.
        """
        self.data_fname = pathlib.Path(data_fname) if isinstance(data_fname, str) else data_fname
        self.data = None

    def read_data(self):
        """
        Reads the JSON data located in self.data_fname into memory,
        storing it in the attribute self.data.
        """
        try:
            with open(self.data_fname, 'r') as f:
                self.data = json.load(f)
        except Exception as e:
            raise ValueError(f"Error reading data from {self.data_fname}: {e}")

    def show_age_distrib(self) -> Tuple[np.ndarray, np.ndarray]:
        """
        Calculates and plots the age distribution of the participants.

        Returns
        -------
        hist : np.ndarray
            Number of people in a given bin.
        bins : np.ndarray
            Bin edges.
        """
        if self.data is None:
            raise ValueError("Data not loaded. Please call read_data() first.")

        # Extract ages from the data, handling missing or corrupt values
        ages = []
        for participant in self.data:
            age = participant.get("age")
            if isinstance(age, int) and 0 <= age <= 100:  # Valid age range
                ages.append(age)

        # Define bins for the histogram
        bins = np.arange(0, 101, 10)  # [0, 10), [10, 20), ..., [90, 100]

        # Calculate histogram
        hist, bin_edges = np.histogram(ages, bins=bins)

        # Plot the histogram
        plt.figure(figsize=(8, 6))
        plt.hist(ages, bins=bins, edgecolor='black', alpha=0.7)
        plt.title("Age Distribution of Participants")
        plt.xlabel("Age")
        plt.ylabel("Number of Participants")
        plt.xticks(bins)
        plt.grid(axis='y', linestyle='--', alpha=0.7)
        plt.show()

        return hist, bin_edges


# Instantiate the class and call its methods
qa = QuestionnaireAnalysis("data.json")
qa.read_data()
hist, bins = qa.show_age_distrib()
print("Histogram:", hist)
print("Bins:", bins)

